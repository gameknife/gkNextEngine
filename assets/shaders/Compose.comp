#version 460
#extension GL_GOOGLE_include_directive : require

#include "common/UniformBufferObject.glsl"
#include "common/ColorFunc.glsl"

layout(binding = 0, rgba16f) uniform image2D Final0Image;
layout(binding = 1, rgba16f) uniform image2D Final1Image;
layout(binding = 2, rgba16f) uniform image2D AlbedoImage;
layout(binding = 3, rgba8) uniform image2D OutImage;
layout(binding = 4) readonly uniform UniformBufferObjectStruct { UniformBufferObject Camera; };
layout(binding = 5, rg16f) uniform image2D MotionVectorImage;

layout(push_constant) uniform PushConsts {
    uint pingpong;
    uint stepsize;
} pushConsts;

layout(local_size_x = 8, local_size_y = 4, local_size_z = 1) in;

void main() {
    ivec2 ipos = ivec2(gl_GlobalInvocationID.xy) + ivec2(Camera.ViewportRect.x, Camera.ViewportRect.y);

    // simple compose together
    vec4 final = pushConsts.pingpong == 0 ? imageLoad(Final1Image, ipos) : imageLoad(Final0Image, ipos);
    vec4 albedo = imageLoad(AlbedoImage, ipos);
    
    imageStore(OutImage, ipos, vec4( LinearToST2084UE(final.rgb * Camera.PaperWhiteNit / 230.0), 1.0));
    
}